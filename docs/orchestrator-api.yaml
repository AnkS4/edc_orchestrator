openapi: 3.0.3
info:
  title: Dataspace Orchestrator API
  description: |
    RESTful API for managing dataspace orchestration processes including transfers and status monitoring.
    This API enables initiating combined service/data transfers and retrieving process status information.
  version: 1.0.0
servers:
  - url: /
    description: Base URL for all endpoints

components:
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-Api-Key
      description: API key for authentication

  schemas:
    DataEntry:
      type: object
      required:
        - type
        - counterPartyAddress
        - contractId
        - connectorId
      properties:
        type:
          type: string
          enum: ["edc-asset"]
          description: Type of data entry, currently only edc-asset is supported
        counterPartyAddress:
          type: string
          description: Address of the counter party
        contractId:
          type: string
          description: ID of the contract
        connectorId:
          type: string
          description: ID of the connector

    Service:
      type: object
      required:
        - counterPartyAddress
        - contractId
        - connectorId
      properties:
        counterPartyAddress:
          type: string
          description: Address of the counter party
        contractId:
          type: string
          description: ID of the contract
        connectorId:
          type: string
          description: ID of the connector

    CombinedTransferRequest:
      type: object
      required:
        - service
        - data
        - connectorAddress
      properties:
        service:
          $ref: '#/components/schemas/Service'
          description: Service transfer configuration
        data:
          type: array
          description: List of data entries to transfer
          minItems: 1
          items:
            $ref: '#/components/schemas/DataEntry'
        connectorAddress:
          type: string
          description: Address of the connector

    TransferProcessResponse:
      type: object
      properties:
        status:
          type: string
          enum: ["SUCCESS"]
          description: Status of the operation
        status_code:
          type: integer
          description: HTTP status code
        orchestration_id:
          type: string
          format: uuid
          description: Unique identifier for the orchestration process
        workflow:
          type: object
          properties:
            service:
              type: object
              description: Service workflow information
              properties:
                resource_id:
                  type: string
                  description: Resource identifier
                status:
                  type: string
                  description: Status of the service workflow
                access_info:
                  type: object
                  description: Access information for the service
            data:
              type: array
              description: Data workflow information
              items:
                type: object
                properties:
                  resource_id:
                    type: string
                    description: Resource identifier
                  status:
                    type: string
                    description: Status of the data workflow
                  access_info:
                    type: object
                    description: Access information for the data
            status:
              type: string
              description: Status of the workflow

    OrchestrationProcess:
      type: object
      properties:
        orchestration_id:
          type: string
          format: uuid
          description: Unique identifier for the orchestration process
        process_status:
          type: string
          description: Status of the orchestration process
        type:
          type: string
          description: Type of the orchestration process
        created_at:
          type: string
          format: date-time
          description: Time when the process was created
        updated_at:
          type: string
          format: date-time
          description: Time when the process was last updated
        transfer_id:
          type: string
          description: ID of the transfer process, if applicable
        edc_response:
          type: object
          description: Response from the EDC, if applicable
        transfer_status:
          type: string
          description: Status of the transfer, if applicable

    OrchestrationStatusResponse:
      type: object
      properties:
        status:
          type: string
          enum: ["SUCCESS"]
          description: Status of the operation
        status_code:
          type: integer
          description: HTTP status code
        workflow:
          type: object
          properties:
            orchestration_processes:
              type: object
              additionalProperties:
                $ref: '#/components/schemas/OrchestrationProcess'
              description: Map of orchestration process IDs to their details

    OrchestrationDetailResponse:
      type: object
      properties:
        status:
          type: string
          enum: ["SUCCESS"]
          description: Status of the operation
        status_code:
          type: integer
          description: HTTP status code
        workflow:
          type: object
          properties:
            orchestration_processes:
              type: object
              additionalProperties:
                $ref: '#/components/schemas/OrchestrationProcess'
              description: Map containing the requested orchestration process detail

    ErrorResponse:
      type: object
      properties:
        message:
          type: string
          description: Error message
        status:
          type: string
          enum: ["ERROR"]
          description: Status of the operation
        status_code:
          type: integer
          description: HTTP status code
        details:
          type: object
          description: Additional error details

paths:
  /orchestrator/orchestrate:
    post:
      summary: Create a new combined service/data transfer
      description: Initiates a combined transfer process for services and data assets
      operationId: createTransferProcess
      security:
        - ApiKeyAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CombinedTransferRequest'
            example:
              service:
                counterPartyAddress: "https://provider.example.com/api"
                contractId: "contract-123"
                connectorId: "connector-abc"
              data:
                - type: "edc-asset"
                  counterPartyAddress: "https://provider.example.com/api"
                  contractId: "contract-456"
                  connectorId: "connector-def"
              connectorAddress: "https://consumer.example.com/connector"
      responses:
        '200':
          description: Transfer process initiated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransferProcessResponse'
        '400':
          description: Invalid request format
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Missing API key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Invalid API key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /orchestrator/status:
    get:
      summary: Get status of all orchestration processes
      description: Retrieves status information for all orchestration processes
      operationId: getOrchestrationStatus
      security:
        - ApiKeyAuth: []
      responses:
        '200':
          description: Successfully retrieved all orchestration process statuses
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrchestrationStatusResponse'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /orchestrator/status/{orchestrationId}:
    get:
      summary: Get detailed status of a specific orchestration process
      description: Retrieves detailed status information for a specific orchestration process
      operationId: getOrchestrationDetail
      security:
        - ApiKeyAuth: []
      parameters:
        - name: orchestrationId
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: Unique identifier of the orchestration process
        - name: clientIp
          in: query
          required: true
          schema:
            type: string
          description: Client IP address for EDC endpoint
      responses:
        '200':
          description: Successfully retrieved orchestration process status
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrchestrationDetailResponse'
        '400':
          description: Invalid orchestration ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Orchestration process not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /health:
    get:
      summary: Health check endpoint
      description: Checks if the API is running properly
      operationId: healthCheck
      responses:
        '200':
          description: API is healthy
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "healthy"

security:
  - ApiKeyAuth: []
